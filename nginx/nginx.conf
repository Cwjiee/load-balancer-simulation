events {
    worker_connections 1024;
}

http {
  log_format upstream_traffic '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" '
    'upstream:"$upstream_addr" '
    'request_time:"$request_time" '
    'upstream_response_time:"$upstream_response_time"';

  upstream golang_backends {
    # Docker's internal DNS allows to use service names instead of IP addresses
        server app_1:8080; 
        server app_2:8080;
        server app_3:8080;
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass http://golang_backends;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
